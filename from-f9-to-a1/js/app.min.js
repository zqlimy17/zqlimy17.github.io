let time=30,difficultyMode="easy",activeGameMode="Timed",timeLeft=time,operation="",currentHighScore="",ans=0,isPaused=!1,scoreCounter=0,highScoreStorage=[];const startMenu=$("#start-menu"),countdown=$("#countdown"),inGame=$("#in-game"),endGame=$("#end-game"),scoreBoard=$("#score-board"),startGame=$("#start-game"),userInput=$("#user-input"),timeBar=$("#time-bar"),tipsSpace=$("#tips"),endGameScore=$("#end-game-score"),pausedScreen=$("#paused-screen"),masterTime=$("#master-time"),operationButton=$(".operation-button"),startCountdown=$("#start-countdown"),gameSpace=$("#mathable"),mainMenuHighScore=$("#main-menu-high-score"),highScore=$(".high-score"),currentScore=$("#current-score"),restartGameButton=$("#restart-game"),mainMenuButton=$(".back-to-main-menu"),additionButton=$("#addition"),subtractionButton=$("#subtraction"),multiplicationButton=$("#multiplication"),divisionButton=$("#division"),randomButton=$("#random"),pauseButton=$("#pause-button"),inGameEndGame=$("#in-game-end-game"),resumeButton=$("#resume-button"),pausedMainMenu=$("#paused-main-menu"),gameMode=$(".game-mode"),difficultyOptions=$(".difficulty-options");let mainMenuSound=new Audio("audio/mainmenu.wav"),inGameSound=new Audio("audio/in-game.mp3"),gameButtonSound=new Audio("audio/buttonclick.mp3"),countdownSound=new Audio("audio/countdown-timer.mp3"),goSound=new Audio("audio/start-voice.mp3"),correctSound=new Audio("audio/correct-voice.mp3"),incorrectSound=new Audio("audio/incorrect-voice.mp3"),gameEndSound=new Audio("audio/gameend.mp3");const tips=["Tip: Hit SPACE to skip!","Tip: Stuck? Try the Casual game mode!","Tip: Too hard? HIT SPACE TO SKIP!","Tip: Spacebar to skip."];let game=()=>{switch(userInput.focus(),operation){case"addition":addition();break;case"subtraction":subtraction();break;case"multiplication":multiplication();break;case"division":division();break;default:random()}},addition=()=>{switch(difficultyMode){case"easy":var e=Math.ceil(45*Math.random())+5,a=Math.ceil(47*Math.random())+3;ans=e+a,gameSpace.text(e+"+"+a);break;case"medium":e=Math.ceil(75*Math.random())+25,a=Math.ceil(75*Math.random())+25;var t=Math.ceil(75*Math.random())+25;ans=e+a+t,gameSpace.text(e+"+"+a+"+"+t);break;default:e=Math.ceil(45*Math.random())+5,a=Math.ceil(47*Math.random())+3,t=Math.ceil(45*Math.random())+5;var o=Math.ceil(47*Math.random())+3;ans=e+a+t+o,gameSpace.text(`${e} + ${a} + ${t} + ${o}`)}},subtraction=()=>{switch(difficultyMode){case"easy":var e=Math.ceil(45*Math.random())+5,a=Math.ceil(47*Math.random())+3;ans=e-a,gameSpace.text(e+"-"+a);break;case"medium":e=Math.ceil(25*Math.random())+25,a=Math.ceil(47*Math.random())+3;var t=Math.ceil(45*Math.random())+5;ans=e-a-t,gameSpace.text(`${e} - ${a} - ${t}`);break;default:e=Math.ceil(80*Math.random())+20,a=Math.ceil(47*Math.random())+3,t=Math.ceil(45*Math.random())+5;var o=Math.ceil(47*Math.random())+3;ans=e-a-t-o,gameSpace.text(`${e} - ${a} - ${t} - ${o}`)}},multiplication=()=>{let e=Math.random();switch(difficultyMode){case"easy":var a=Math.ceil(9*Math.random())+3,t=Math.ceil(9*Math.random())+3;ans=a*t,gameSpace.text(a+"x"+t);break;case"medium":e=Math.random();a=Math.ceil(8*Math.random())+4,t=Math.ceil(4*Math.random())+1;e<.5?(ans=a*a*t,gameSpace.text(`${a}² x ${t}`)):(ans=a*t*t,gameSpace.text(`${a} x ${t}²`));break;default:e=Math.random();a=Math.ceil(4*Math.random())+2;var o=Math.ceil(4*Math.random())+2;switch(!0){case e<.33:t=o*o;var n=Math.ceil(4*Math.random())+2;ans=a*a*Math.sqrt(t)*n,gameSpace.text(`${a}² x √${t} x ${n}`);break;case e<.67:n=o*o,t=Math.ceil(4*Math.random())+2;ans=a*t*t*Math.sqrt(n),gameSpace.text(`${a} x ${t}² x √${n}`);break;default:var i=Math.ceil(4*Math.random())+2;t=Math.ceil(4*Math.random())+2,n=Math.ceil(4*Math.random())+2;ans=a*t*n*i,gameSpace.text(`${a} x ${t} x ${n} x ${i}`)}}},division=()=>{switch(difficultyMode){case"easy":var e=(a=Math.ceil(9*Math.random())+3)*(Math.ceil(9*Math.random())+3);ans=e/a,gameSpace.text(e+"÷"+a);break;case"medium":e=(t=(a=Math.ceil(2*Math.random())+3)*Math.ceil(7*Math.random()))*t;ans=t/a,gameSpace.text(`√${e} ÷ ${a}`);break;default:var a,t,o=Math.ceil(2*Math.random())+2;e=(t=(a=o*o)*Math.ceil(3*Math.random()))*t;ans=t/o,gameSpace.text(`√${e} ÷ √${a}`)}},random=()=>{let e="";switch(e=Math.floor(4*Math.random()),!0){case 0===e:addition();break;case 1===e:subtraction();break;case 2===e:multiplication();break;default:division()}},enter=e=>{e.target.value==ans?(userInput.addClass("flash"),setTimeout(function(){userInput.removeClass("flash")},400),correct(),game()):(userInput.addClass("shake"),setTimeout(function(){userInput.removeClass("shake")},400),wrong())};userInput.on("keydown",function(e){13===e.keyCode?enter(e):32===e.keyCode&&game()});const correct=()=>{switch(correctSound.play(),difficultyMode){case"easy":switch(operation){case"addition":scoreCounter+=2;break;case"subtraction":scoreCounter+=3;break;case"multiplication":scoreCounter+=4;break;case"division":scoreCounter+=5;break;default:switch(!0){case"addition"===operation:scoreCounter+=4;break;case"subtraction"===operation:scoreCounter+=6;break;case"multiplication"===operation:scoreCounter+=8;break;default:scoreCounter+=10}}break;case"medium":switch(operation){case"addition":scoreCounter+=20;break;case"subtraction":scoreCounter+=30;break;case"multiplication":scoreCounter+=40;break;case"division":scoreCounter+=50;break;default:switch(!0){case"addition"===operation:scoreCounter+=40;break;case"subtraction"===operation:scoreCounter+=60;break;case"multiplication"===operation:scoreCounter+=80;break;default:scoreCounter+=100}}break;default:switch(operation){case"addition":scoreCounter+=200;break;case"subtraction":scoreCounter+=300;break;case"multiplication":scoreCounter+=400;break;case"division":scoreCounter+=500;break;default:switch(!0){case"addition"===operation:scoreCounter+=400;break;case"subtraction"===operation:scoreCounter+=600;break;case"multiplication"===operation:scoreCounter+=800;break;default:scoreCounter+=1e3}}}currentScore.text(scoreCounter),userInput.val("")},wrong=()=>{incorrectSound.play(),scoreCounter--,currentScore.text(scoreCounter),userInput.val("")},checkHighScoreUnlockDifficulty=()=>{currentHighScore>=25&&($("#medium-tooltip").tooltip("dispose"),$("#medium-button").css("pointer-events",""),difficultyOptions.eq(1).attr("disabled",!1)),currentHighScore>=250&&($("#hard-tooltip").tooltip("dispose"),$("#hard-button").css("pointer-events",""),difficultyOptions.eq(2).attr("disabled",!1))},gameStart=()=>{timeBar.css("animation-play-state",""),inGameSound.play(),inGameSound.volume=.5,inGameSound.loop=!0,countdown.hide(),inGame.show(),game(),startTimer()};let startTimer=()=>{if(mainMenuSound.pause(),"Timed"===activeGameMode){timeBar.show(),timeBar.addClass("colorchange"),timeLeft=time;let e=setInterval(function(){isPaused||(timeLeft-=.01,timeBar.width(timeLeft/time*100+"%")),timeLeft<=.01&&(clearInterval(e),gameEnd())},10);pausedMainMenu.on("click",()=>{clearInterval(e),isPaused=!1}),inGameEndGame.on("click",()=>{clearInterval(e)})}else"Casual"===activeGameMode&&timeBar.hide()};const startGameButtonClicked=()=>{tipsSpace.text(tips[Math.floor(Math.random()*tips.length)]),scoreCounter=0,currentScore.text(scoreCounter);let e=3;startMenu.hide(),countdown.show(),startCountdown.text(e);let a=setInterval(function(){e--,startCountdown.text(e),0===e?(goSound.play(),startCountdown.text("Go!"),clearInterval(a)):countdownSound.play(),mainMenuSound.volume-=.3},1e3);setTimeout(function(){timeBar.css("animation-play-state",""),inGameSound.play(),inGameSound.volume=.5,inGameSound.loop=!0,countdown.hide(),inGame.show(),game(),startTimer()},4e3)},gameEnd=()=>{inGameSound.pause(),inGameSound.currentTime=0,gameEndSound.play(),inGame.hide(),endGame.show(),endGameScore.append(scoreCounter),mainMenuHighScore.show(),currentHighScore<scoreCounter&&(currentHighScore=scoreCounter,highScore.text(currentHighScore),highScoreStorage.pop(),highScoreStorage.push(currentHighScore),window.localStorage.setItem("highScore",JSON.stringify(highScoreStorage))),checkHighScoreUnlockDifficulty()};startGame.attr("disabled",!0),startGame.on("click",()=>{startGameButtonClicked(),countdownSound.play()}),restartGameButton.on("click",()=>{countdownSound.play(),startGameButtonClicked(),endGame.hide(),endGameScore.text("")}),operationButton.on("click",e=>{$("#start-tooltip").tooltip("dispose");let a=e.target.id;operationButton.removeClass("active"),$(e.currentTarget).addClass("active"),operation=a,startGame.attr("disabled",!1)}),gameMode.on("click",e=>{gameMode.removeClass("active"),$(e.currentTarget).addClass("active"),masterTime.text($(e.currentTarget).attr("value")),activeGameMode=$(e.currentTarget).text()}),difficultyOptions.on("click",e=>{difficultyOptions.removeClass("active"),$(e.currentTarget).addClass("active"),difficultyMode=$(e.currentTarget).attr("value")}),inGameEndGame.on("click",()=>{gameEnd()}),mainMenuButton.on("click",()=>{mainMenuSound.volume=1,mainMenuSound.play(),mainMenuSound.loop=!0,pausedScreen.hide(),countdown.hide(),inGame.hide(),endGame.hide(),startMenu.show(),endGameScore.text("")}),pauseButton.on("click",()=>{inGameSound.pause(),timeBar.css("animation-play-state","paused"),isPaused=!0,pausedScreen.show(),inGame.hide()}),resumeButton.on("click",()=>{inGameSound.play(),timeBar.css("animation-play-state",""),isPaused=!1,pausedScreen.hide(),inGame.show()});let promise=mainMenuSound.play();void 0!==promise&&promise.then(e=>{console.log("Autoplay started!")}).catch(e=>{console.log("Autoplay was prevented.")}),$(".btn").on("click",()=>{gameButtonSound.play()}),mainMenuHighScore.hide(),highScoreStorage.push(JSON.parse(window.localStorage.getItem("highScore"))),highScoreStorage[0]>0&&(currentHighScore=highScoreStorage[0],highScore.text(currentHighScore),mainMenuHighScore.show()),checkHighScoreUnlockDifficulty(),$('[data-toggle="tooltip"]').tooltip(),countdown.hide(),inGame.hide(),endGame.hide(),pausedScreen.hide();